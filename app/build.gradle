apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.caparepa.basemvvmboilerplate"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //Added default Room DB export location to get rid of warning
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "2g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    /**
     * In order to use the signingOptions, the corresponding keystore files must be generated
     */

    signingConfigs {
        debug {
            /*storeFile file('../keystore-debug.jks')
            storePassword '123456'
            keyAlias 'keystore-debug'
            keyPassword '123456'*/
        }
        release {
            /*storeFile file('../keystore-release.jks')
            storePassword '123456'
            keyAlias 'keystore-release'
            keyPassword '123456'*/
        }
    }

    lintOptions {
        abortOnError true
    }

    FileCollection proguardFileCollection = files(
            file('../proguard.cfg'),
            getDefaultProguardFile('proguard-android.txt')
    )

    buildTypes {

        debug {
            versionNameSuffix "-${getCurrentGitBranchName()}"

            applicationIdSuffix '.debug'
            minifyEnabled false
            zipAlignEnabled false // this is default for debug
            signingConfig signingConfigs.debug

            buildConfigField "String", "WEATHERBIT_BASE_URL", "\"http://api.weatherbit.io/v2.0/\""
            buildConfigField "String", "WEATHERBIT_API_KEY", WEATHERBIT_API_KEY
            buildConfigField "String", "GIT_SHA", "\"${getGitSHA()}\""

            resValue "string", "application_id", android.defaultConfig.applicationId + applicationIdSuffix
            resValue "string", "google_maps_key", "HERE GOES YOUR GOOGLE MAPS KEY"
        }

        debugMinified.initWith(buildTypes.debug)
        debugMinified {
            minifyEnabled true
            proguardFiles proguardFileCollection.getFiles().toArray()
        }

        debugStaging {
            initWith debug
            applicationIdSuffix '.debugstaging'

            minifyEnabled true
            proguardFiles proguardFileCollection.getFiles().toArray()

            buildConfigField "String", "WEATHERBIT_BASE_URL", "\"http://api.weatherbit.io/v2.0/\""
            buildConfigField "String", "WEATHERBIT_API_KEY", WEATHERBIT_API_KEY
            buildConfigField "String", "GIT_SHA", "\"${getGitSHA()}\""

            resValue "string", "application_id", android.defaultConfig.applicationId + applicationIdSuffix
            resValue "string", "google_maps_key", "HERE GOES YOUR GOOGLE MAPS KEY"
        }

        release {
            minifyEnabled true
            proguardFiles proguardFileCollection.getFiles().toArray()
            signingConfig signingConfigs.release
            zipAlignEnabled true // this is default for release

            buildConfigField "String", "WEATHERBIT_BASE_URL", "\"http://api.weatherbit.io/v2.0/\""
            buildConfigField "String", "WEATHERBIT_API_KEY", WEATHERBIT_API_KEY
            buildConfigField "String", "GIT_SHA", "\"${getGitSHA()}\""

            resValue "string", "application_id", android.defaultConfig.applicationId + applicationIdSuffix
            resValue "string", "google_maps_key", "HERE GOES YOUR GOOGLE MAPS KEY"
        }
    }
}

/**
 * Test dependencies
 */
dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Preference
    implementation "androidx.preference:preference:1.1.1"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //Material
    implementation "com.google.android.material:material:$material_version"

    //Firebase analytics
    implementation "com.google.firebase:firebase-analytics:$firebase_analytics_version"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment:$navigation_version"
    implementation "android.arch.navigation:navigation-ui:$navigation_version"
    implementation "android.arch.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigation_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Better dateTime-time support even on older Android versions
    implementation "com.jakewharton.threetenabp:threetenabp:$threeten_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Groupie RecyclerView
    implementation "com.xwray:groupie:$groupie_version"
    implementation "com.xwray:groupie-kotlin-android-extensions:$groupie_version"

    //KOIN
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    //moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    //OKHTTP
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

}

/**
 * Gets current git branch name
 */
static String getCurrentGitBranchName() {
    return 'git symbolic-ref --short HEAD'.execute().text.trim()
}

static String getGitSHA() {
    return 'git rev-parse HEAD'.execute().text.trim()
}